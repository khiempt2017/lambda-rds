<%#
  * day_average.ejs
  * NewBP
  *
  * Created by KhiemPT on 2025/09/15.
  * Copyright (c) 2025 OMRON HEALTHCARE Co.,Ltd. All rights reserved.
%>
<svg
  xmlns="http://www.w3.org/2000/svg"
  xmlns:xlink="http://www.w3.org/1999/xlink"
  width="1122"
  height="790"
  viewBox="0 0 1122 790"
>
  <%# ----------- GRID - START ----------- %>
  <%# Fill background for page %>
  <rect width="1122" height="790" style="fill:#fff;"/>

  <%# Fill background for header table %>
  <rect x="18" y="48" width="1084" height="38" style="fill:#c1c6d5; opacity:0.2;"/>
  <rect x="18" y="470" width="116" height="64" style="fill:#c1c6d5;opacity:0.2;"/>
  <rect x="18" y="491.5" width="1084" height="0.65" style="fill:#ccc;"/>
  <rect x="18" y="512.5" width="1084" height="0.65" style="fill:#ccc;"/>

  <%# Dashed vertical lines %>
  <% for (let i = 0, dotLineV = 0; i < 15; i++, dotLineV += 56) { %>
    <% dotLineV += (i == 7 || i == 8 ? 2.5 : 0); %>
    <line x1="<%= 190 + dotLineV %>" y1="48" x2="<%= 190 + dotLineV %>" y2="742" style="fill:none; stroke:#a6aab2; stroke-miterlimit:13.25; stroke-width:0.65; stroke-dasharray: 1,2;"/>
  <% } %>

  <%# Other vertical lines and horizontal lines %>
  <rect x="18" y="48" width="1084" height="0.65" style="fill:#a6aab2;"/>
  <rect x="18" y="86" width="1084" height="0.65" style="fill:#a6aab2;"/>
  <rect x="18" y="470" width="1084" height="0.65" style="fill:#a6aab2;"/>
  <rect x="18" y="534" width="1084" height="0.65" style="fill:#a6aab2;"/>
  <rect x="18" y="742" width="1084" height="0.65" style="fill:#a6aab2;"/>
  <rect x="18" y="556" width="1017" height="0.65" style="fill:#a6aab2;"/>
  <rect x="18" y="598" width="1017" height="0.65" style="fill:#a6aab2;"/>
  <rect x="18" y="48" width="0.65" height="694" style="fill:#a6aab2;"/>
  <rect x="134" y="48" width="0.65" height="694" style="fill:#a6aab2;"/>
  <rect x="1102" y="48" width="0.65" height="694" style="fill:#a6aab2;"/>
  <rect x="1035" y="48" width="0.65" height="694" style="fill:#a6aab2;"/>

  <%# ----------- GRID - END ----------- %>

  <%# ----------- TEXT - START ----------- %>
  <%# Date header table at top-left %>
  <text transform="translate(76 72)" text-anchor="middle" style="font-size:12; fill:#484f6b; letter-spacing:0.025em; font-family:<%= fontName %>;"><%= appLang.PDF_DATE %></text>

  <%# Average head table at right %>
  <text transform="translate(1068.5 72)" style="font-size:10; fill:#4d5266; letter-spacing:0.02496337890625em; font-family:<%= fontName %>;" text-anchor="middle"><%= appLang.PDF_AVG_TEXT %></text>

  <%# mmHg %>
  <text transform="translate(132 100)" text-anchor="end" style="font-size:9; fill:#7f7f7f; font-family:<%= fontName %>;">[mmHg]</text>

  <%# Text at left %>
  <text transform="translate(76 470)" style="font-size:10; fill:#4d5266; letter-spacing:0.07501220703125em; text-anchor:middle; font-family:<%= fontName %>;">
    <tspan x="0" y="15"><%= appLang.PDF_SYS %></tspan>
    <tspan x="0" y="36"><%= appLang.PDF_DIA %></tspan>
    <tspan x="0" y="58"><%= appLang.PDF_PULSE %></tspan>
  </text>
  <text transform="translate(76 550)" text-anchor="middle" style="font-size:10; fill:#4d5266; letter-spacing:0.0250244140625em; font-family:<%= fontName %>;"><%= appLang.PDF_CONSULTATION %></text>
  <text transform="translate(76 582)" text-anchor="middle" style="font-size:10; fill:#4d5266; letter-spacing:0.0250244140625em; font-family:<%= fontName %>;"><%= appLang.PDF_MEDICATION %></text>
  <text transform="translate(76 676)" text-anchor="middle" style="font-size:10; fill:#4d5266; letter-spacing:0.0250244140625em; font-family:<%= fontName %>;"><%= appLang.PDF_NOTES %></text>

  <%# Level text at left %>
  <text transform="translate(22 166)" style="font-size:9; fill:#4d5266; font-family:<%= fontName %>;"><%= appLang.PDF_ACHIEVEMENT_LEVEL %></text>
  <text transform="translate(36 182)" style="font-size:9; fill:#191919; font-family:<%= fontName %>;">
    <tspan x="0" y="0"><%= appLang.PDF_TARGET_ACHIEVED %></tspan>
    <tspan x="0" y="13"><%= appLang.PDF_EQUAL_OR_SLIGHTLY_1 %></tspan>
    <tspan x="0" y="26"><%= appLang.PDF_EQUAL_OR_SLIGHTLY_2 %></tspan>
    <tspan x="0" y="39"><%= appLang.PDF_EQUAL_OR_SLIGHTLY_3 %></tspan>
    <tspan x="0" y="52"><%= appLang.PDF_HIGHER %></tspan>
    <tspan x="0" y="65"><%= appLang.PDF_MUCH_HIGHER %></tspan>
  </text>

  <%# Level icon at left %>
  <%- renderTargetAchievedIcon(22, 174, 1.2) %>
  <%- renderEqualOrSlightlyIcon(22, 187, 1.2) %>
  <%- renderHigherIcon(22, 227, 1.2) %>
  <%- renderMuchHigherIcon(22, 238, 1.2) %>

  <%# ----------- TEXT - END ----------- %>

  <%# ----------- CHART - START ----------- %>

  <%
    // Start chart area
    const xChart = 134;
    const yChart = 87;  // Move chart down more for better positioning

    // Width of each dates
    const wColumn = 56;
    const wMiddleColumn = 58.5;

    // Start medicines area
    const yMedicinesIcon = 556;

    // Start avg data area
    const yAvgData = 470;

    // Start consultation icon area
    const yConsultationIcon = 534;

    // Start memo text area
    const yMemoText = 598;

    // For calculate average of sys, dia
    const avgDaysData = { systolic: 0, diastolic: 0, pulse: 0, count: 0 };

    // For get corresponding rendering function
    const targetIconRenderFunction = {
      iconTargetAchieved: 'renderTargetAchievedIcon',
      iconEqual: 'renderEqualOrSlightlyIcon',
      iconHigher: 'renderHigherIcon',
      iconMuchHigher: 'renderMuchHigherIcon',
    };

    // Calculate pixel per blood pressure ratio
    const bpGraphHeight = 385;  // Increase height for more spacing between levels
    const pixelPerBpRatio = bpGraphHeight / (levelLabel[0] - levelLabel[levelLabel.length - 1]);
    const topPseudoBpLine = levelLabel[0];
    const bottomPseudoBpLine = levelLabel[levelLabel.length - 1];

    // Remove two pseudo line out label array (matching blade.php behavior)
    const displayLevelLabel = [...levelLabel];
    displayLevelLabel.shift(); // Remove first element (top pseudo line)
    displayLevelLabel.pop();   // Remove last element (bottom pseudo line)
    // Function to convert the bp value to pixel
    const bp2px = (bp) => {
      // Calculate distance from max bp line to bp param
      const fromTopPseudoBpLineToBp = topPseudoBpLine - bp;

      // Use basic formula: pixel/bp = pixelPerBpRatio => pixel = bp*pixelPerBpRatio
      const pixel = fromTopPseudoBpLineToBp * pixelPerBpRatio;
      const yPositionOfBp = yChart + pixel;
      return yPositionOfBp;
    };
  %>
  <%
    const sysTY = bp2px(targetBp.sysT);
    const diaTY = bp2px(targetBp.diaT);
  %>
  <%- renderTriangleIcon(1037, sysTY + 0.5, 1.3) %>
  <text transform="translate(1045 <%= sysTY + 4 %>)" style="font-size:10; fill:#F7375C; font-family:<%= fontName %>;"><%= targetBp.sysT %></text>
  <text transform="translate(1045 <%= sysTY + 15 %>)" style="font-size:10; fill:#F7375C; font-family:<%= fontName %>;"><%= appLang.PDF_LESSTHAN_TEXT %></text>
  <text transform="translate(1038 <%= sysTY + 24 %>)" style="font-size:8; fill:#F7375C; font-family:<%= fontName %>;">
    <tspan style="letter-spacing:-0.02001953125em"><%= appLang.PDF_YOUR_TARGET_SYS %></tspan>
  </text>

  <%- renderTargetLine(134, sysTY, 1035, sysTY) %>

  <% const hasTargetDia = (diaTY - sysTY) > (24 + 5 + 1) %>
  <% if (hasTargetDia) { %>
    <%- renderTriangleIcon(1037, diaTY + 0.5, 1.3) %>
    <text transform="translate(1045 <%= diaTY + 4 %>)" style="font-size:10; fill:#F7375C; font-family:<%= fontName %>;"><%= targetBp.diaT %></text>
    <text transform="translate(1045 <%= diaTY + 15 %>)" style="font-size:10; fill:#F7375C; font-family:<%= fontName %>;"><%= appLang.PDF_LESSTHAN_TEXT %></text>

    <% if ((diaTY + 24) < (yChart + bpGraphHeight)) { %>
      <text transform="translate(1038 <%= diaTY + 24 %>)" style="font-size:8; fill:#F7375C; font-family:<%= fontName %>;">
        <tspan style="letter-spacing:-0.02001953125em"><%= appLang.PDF_YOUR_TARGET_DIA %></tspan>
      </text>
    <% } %>

    <%- renderTargetLine(134, diaTY, 1035, diaTY) %>
  <% } %>

  <% for (let i = 0; i < displayLevelLabel.length; i++) { %>
    <% if (![sysTY, hasTargetDia ? diaTY : -1].includes(bp2px(displayLevelLabel[i]))) { %>
      <rect x="134" y="<%= bp2px(displayLevelLabel[i]) %>" width="901" height="0.65" style="fill:#ccc"/>
    <% } %>
  <% } %>

  <% for (let i = 0; i < displayLevelLabel.length; i++) { %>
    <% const labelPosition = bp2px(displayLevelLabel[i]); %>
    <% if ((100 + 4.5 + 1) < labelPosition && labelPosition < (yChart + bpGraphHeight - 4.5 - 1)) { %>
      <text x="<%= 116 + (3 - displayLevelLabel[i].toString().length) * 6 %>" y="<%= labelPosition + 4 %>" style="font-size:9; fill:#7f7f7f; font-family:<%= fontName %>;"><%= displayLevelLabel[i] %></text>
    <% } %>
  <% } %>

  <% for (let i = 0; i < displayLevelLabel.length; i++) { %>
    <% const labelPosition = bp2px(displayLevelLabel[i]); %>
    <% const labelWidth = displayLevelLabel[i].toString().length * 6; %>
    <% if ((yChart + 4.5 + 1) < labelPosition && labelPosition < (yChart + bpGraphHeight - 4.5 - 1)) { %>
      <rect x="<%= 584.5 - labelWidth / 2 - 1 %>" y="<%= labelPosition - 4 %>" width="<%= labelWidth + 2 %>" height="9" fill="#fff"/>
      <text x="<%= 584.5 - labelWidth / 2 %>" y="<%= labelPosition + 4 %>" style="font-size:9; fill:#7f7f7f; font-family:<%= fontName %>;"><%= displayLevelLabel[i] %></text>
    <% } %>
  <% } %>
  
  <%
    // Handle both array and object cases for arrDays
    const daysIterator = Array.isArray(arrDays) ? arrDays.entries() : Object.entries(arrDays);
  %>
  <% for (const [i, dayW] of daysIterator) { %>
    <% const delta = wMiddleColumn - wColumn; %>
    <% const xDay = xChart + i * wColumn + (i <= 7 ? 0 : (i == 8 ? delta : 2 * delta)); %>
    <% const xMiddleDay = xDay + ((i === 7 || i === 8) ? wMiddleColumn / 2 : wColumn / 2); %>

    <text transform="translate(<%= xMiddleDay %> 67)" text-anchor="middle" style="font-size:15; fill:#191919; font-family:<%= fontName %>;"><%= dayW.day %></text>
    <text transform="translate(<%= xMiddleDay %> 80)" text-anchor="middle" style="font-size:10; fill:<%= dayW.isRed ? '#db4a86' : '#191919' %>; letter-spacing:0.07498604910714286em; font-family:<%= fontName %>;"><%= dayW.weekDays %></text>

    <% for (let j = 0; j < medicinesPerDay; j++) { %>
      <%- renderInactiveMedicineIcon(xMiddleDay - 2, yMedicinesIcon + 4 + (3 - medicinesPerDay) * 5 + j * 10, 1.1) %>
    <% } %>

    <% if (dayW.vitals.medicines) { %>
      <% dayW.vitals.medicines.forEach((value, index) => { %>
        <% if (value !== null) { %>
          <%- renderActiveMedicineIcon(xMiddleDay - 2, yMedicinesIcon + 4 + (3 - medicinesPerDay) * 5 + index * 10, 1.1) %>
        <% } %>
      <% }); %>
    <% } %>

    <% if (dayW?.vitals?.average && dayW.vitals.average[0]?.systolic && dayW.vitals.average[0]?.diastolic) { %>
      <% const width = 20; %>
      <% const height = Math.abs(bp2px(dayW.vitals.average[0].systolic) - bp2px(dayW.vitals.average[0].diastolic)); %>
      <% const dataBpSys = bp2px(dayW.vitals.average[0].systolic); %>

      <%- renderAvgBar(xMiddleDay - (width / 2), dataBpSys, width, height, dayW.vitals.average[0].systolic, dayW.vitals.average[0].riskColorSystolic, dayW.vitals.average[0].diastolic, dayW.vitals.average[0].riskColorDiastolic, fontName) %>

      <text x="<%= xMiddleDay + 6 %>" y="<%= yAvgData + 16 %>" style="font-size:12; fill:#191919; font-family:<%= fontName %>; text-anchor:end"><%= dayW.vitals.average[0].systolic %></text>
      <% if (targetIconRenderFunction[dayW.vitals.average[0].riskIconSystolic]) { %>
        <%- eval(targetIconRenderFunction[dayW.vitals.average[0].riskIconSystolic])(xMiddleDay + 8, yAvgData + 6, 1.2) %>
      <% } %>

      <text x="<%= xMiddleDay + 6 %>" y="<%= yAvgData + 21.5 + 16 %>" style="font-size:12; fill:#191919; font-family:<%= fontName %>; text-anchor:end"><%= dayW.vitals.average[0].diastolic %></text>
      <% if (targetIconRenderFunction[dayW.vitals.average[0].riskIconDiastolic]) { %>
        <%- eval(targetIconRenderFunction[dayW.vitals.average[0].riskIconDiastolic])(xMiddleDay + 8, yAvgData + 21.5 + 6, 1.2) %>
      <% } %>

      <% if (dayW.vitals.average[0].pulse) { %>
        <text x="<%= xMiddleDay + 6 %>" y="<%= yAvgData + 43 + 16 %>" style="font-size:12; fill:#191919; font-family:<%= fontName %>; text-anchor:end"><%= dayW.vitals.average[0].pulse %></text>
      <% } %>

      <% avgDaysData.systolic += dayW.vitals.average[0].systolic || 0; %>
      <% avgDaysData.diastolic += dayW.vitals.average[0].diastolic || 0; %>
      <% avgDaysData.pulse += dayW.vitals.average[0].pulse || 0; %>
      <% avgDaysData.count += 1; %>
    <% } %>

    <% if (dayW.vitals.memoMask) { %>
      <%- renderConsultationIcon(xMiddleDay - 8, yConsultationIcon + 4, 1.2) %>
    <% } %>

    <% if (dayW.vitals.note) { %>
      <% const maxWidthStr = 90; %>
      <% const arrNotes = await splitStringByWidthImg(dayW.vitals.note, maxWidthStr, fontFile, 6.75); %>
      <% if (arrNotes.length > 2) { %>
        <% arrNotes[1] = replaceFinalCharacterToEllipsisPoints(arrNotes[1]); %>
        <% arrNotes.splice(2); %>
      <% } %>
      <% arrNotes.forEach((noteStr, index) => { %>
        <text transform="translate(<%= xMiddleDay + (arrNotes.length == 1 ? 0 : 5) - index * 10 %> <%= yMemoText + 4 %>) rotate(90)" style="font-size:9; fill:#191919; font-family:<%= fontName %>;"><%= noteStr %></text>
      <% }); %>
    <% } %>
  <% }; %>

  <% if (avgDaysData.count > 0) { %>
    <% const avgSystolic = Math.round(avgDaysData.systolic / avgDaysData.count); %>
    <% const avgDiastolic = Math.round(avgDaysData.diastolic / avgDaysData.count); %>
    <% const avgPulse = Math.round(avgDaysData.pulse / avgDaysData.count); %>
    <% const arrRiskIcon = await getRiskColorAndRiskIcon1(avgSystolic, avgDiastolic, userId);%>

    <text x="1072" y="<%= yAvgData + 16 %>" style="font-size:12; fill:#191919; font-family:<%= fontName %>; text-anchor:end"><%= avgSystolic %></text>
    <% if (targetIconRenderFunction[arrRiskIcon.riskIconSystolic]) { %>
      <%- eval(targetIconRenderFunction[arrRiskIcon.riskIconSystolic])(1074, yAvgData + 6, 1.2) %>
    <% } %>

    <text x="1072" y="<%= yAvgData + 21.5 + 16 %>" style="font-size:12; fill:#191919; font-family:<%= fontName %>; text-anchor:end"><%= avgDiastolic %></text>
    <% if (targetIconRenderFunction[arrRiskIcon.riskIconDiastolic]) { %>
      <%- eval(targetIconRenderFunction[arrRiskIcon.riskIconDiastolic])(1074, yAvgData + 21.5 + 6, 1.2) %>
    <% } %>

    <% if (avgPulse) { %>
      <text x="1072" y="<%= yAvgData + 43 + 16 %>" style="font-size:12; fill:#191919; font-family:<%= fontName %>; text-anchor:end"><%= avgPulse %></text>
    <% } %>
  <% } %>
  <%# ----------- CHART - END ----------- %>

  <%# ----------- FOOTER - START ----------- %>

  <%# Square icon at bottom left %>
  <rect x="18" y="750" width="10" height="10" rx="1" ry="1" style="fill:#c1c6d5"/>

  <%# Text at footer %>
  <text transform="translate(32 758)" style="font-size:9; fill:#4d5266; font-family:<%= fontName %>;"><%= appLang.PDF_DAY_AVG_FOOTER_1 %></text>
  <text transform="translate(100 758)" style="font-size:9; fill:#191919; font-family:<%= fontName %>;"><%= appLang.PDF_DAY_AVG_FOOTER_2 %></text>
  
  <%# Three dots icon at footer %>
  <%- renderDotIcon(84, 755, 1.4) %>
  <%- renderDotIcon(88, 755, 1.4) %>
  <%- renderDotIcon(92, 755, 1.4) %>
  <%# ----------- FOOTER - END ----------- %>

  <%# ----------- COMMON - START ----------- %>
  <%# Common partiales view %>
  <%- await include(`/opt/resources/views/svg${subBlade}/template/common.ejs`, {
    PDF_TITLE: appLang.PDF_DAY_AVG_TITLE,
    PDF_DATE: dateFrom + appLang.PDF_DATE_SEPARATE + dateTo,
    PDF_NAME: appLang.PDF_NAME + userName,
    PDF_CREATE_TIME: appLang.PDF_DATE_CREATE + timeCreate,
    PDF_PAGE: appLang.PDF_PAGE + indexPage + '/' + totalPage,
  }) %>
  <%# ----------- COMMON - END ----------- %>
</svg>
